/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cmsprojectwithc;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author lenovo
 */
public class DisplayTeachersList extends javax.swing.JFrame {
 ResultSet rs;
           
    /**
     * Creates new form DisplayTeachersList
     */
    public DisplayTeachersList() {
        try {
            initComponents();
            DB_Model_CMS db=new DB_Model_CMS();
            
            rs=db.getTeacherRecods();
            DefaultTableModel tb=(DefaultTableModel)teacherlist.getModel();
            
            while(rs.next()){
            String row[]={rs.getString("T_Name"),rs.getString("T_ID"),rs.getString("T_Department"),rs.getString("T_Email")};
            tb.addRow(row);    
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(DisplayTeachersList.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        teacherlist = new javax.swing.JTable();
        find = new javax.swing.JButton();
        search = new javax.swing.JTextField();
        delete = new javax.swing.JButton();
        update = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        teacherlist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Teacher ID", "Teacher Name", "Teacher Department", "Teacher Email"
            }
        ));
        jScrollPane1.setViewportView(teacherlist);

        find.setText("Find");
        find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        update.setText("update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(find, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(delete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(find, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(search))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findActionPerformed
     try {
         // TODO add your handling code here:
         DB_Model_CMS db=new DB_Model_CMS();
         
         ResultSet rs;
         rs=db.findRecords(search.getText());
         DefaultTableModel tb=(DefaultTableModel)teacherlist.getModel();
         tb.setRowCount(0);
         while(rs.next()){
             String vector[]={rs.getString("T_ID"),rs.getString("T_Name"),rs.getString("T_Department"),rs.getString("T_Email")};
             tb.addRow(vector);
         
         }
     } catch (SQLException ex) {
         Logger.getLogger(DisplayTeachersList.class.getName()).log(Level.SEVERE, null, ex);
     }
        
        
    }//GEN-LAST:event_findActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
         DB_Model_CMS db=new DB_Model_CMS();
         DefaultTableModel tb=(DefaultTableModel)teacherlist.getModel();
         String rowid=(String) tb.getValueAt(teacherlist.getSelectedRow(),1);
        if(db.RemoveRecordBYID(rowid)==1){
        
            JOptionPane.showMessageDialog(this, "Removed","alert",1);
        }else{
        
        
            JOptionPane.showMessageDialog(this, "ERRor","alert",1);
        }
        
        
                try {
           
            
            rs=db.getTeacherRecods();
          tb.setRowCount(0);
            while(rs.next()){
            String row[]={rs.getString("T_Name"),rs.getString("T_ID"),rs.getString("T_Department"),rs.getString("T_Email")};
            tb.addRow(row);    
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(DisplayTeachersList.class.getName()).log(Level.SEVERE, null, ex);
        }
        

        
        
    }//GEN-LAST:event_deleteActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
     try {
         // TODO add your handling code here:
         
         DefaultTableModel tb=(DefaultTableModel)teacherlist.getModel();
         //rs=db.SearchbyID(search.getText
         String rowid=(String) tb.getValueAt(teacherlist.getSelectedRow(),1);
         
         DB_Model_CMS db=new DB_Model_CMS();
         System.out.println(rowid);
         
         rs=db.getRecordByID(rowid);
         
                 
         
         if(rs.next()){
         System.out.println(rs.getString("T_ID"));
             UpdateTeacher t=new UpdateTeacher(rs.getString("T_ID"),rs.getString("T_Name"),rs.getString("T_Department"),rs.getString("T_Email"));
             t.setVisible(true);
             dispose();
         }
     } catch (SQLException ex) {
         Logger.getLogger(DisplayTeachersList.class.getName()).log(Level.SEVERE, null, ex);
     }
        
         
         
    }//GEN-LAST:event_updateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisplayTeachersList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisplayTeachersList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisplayTeachersList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisplayTeachersList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DisplayTeachersList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delete;
    private javax.swing.JButton find;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField search;
    private javax.swing.JTable teacherlist;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
